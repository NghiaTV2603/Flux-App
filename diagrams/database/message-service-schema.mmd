erDiagram
    %% MESSAGE SERVICE (merged Channel Messages + Direct Messages)
    MESSAGES {
        objectid _id PK "MongoDB ObjectId"
        uuid message_id UK "UUID for referential integrity"
        enum message_type "channel|direct|system"
        uuid channel_id FK "References channels.id (null for DMs)"
        uuid server_id "Server ID (null for DMs)"
        uuid conversation_id "Generated ID for DM conversations"
        json participants "DM participants array (sorted)"
        uuid author_id FK "References user_profiles.user_id"
        varchar author_username "Denormalized for performance"
        text content "Message content"
        enum content_type "text|embed|system|call|file"
        json attachments "File attachments array"
        json embeds "Rich embeds array"
        json mentions "Users, roles, channels mentioned"
        json reactions "Emoji reactions with counts and users"
        uuid reply_to "Reply to message_id"
        uuid thread_id "Thread root message_id"
        boolean is_edited "Edit status"
        json edit_history "Edit history with timestamps"
        boolean is_deleted "Soft delete flag"
        boolean is_pinned "Pinned message in channel"
        json flags "Message flags (crosspost, urgent, etc)"
        timestamp deleted_at
        timestamp created_at
        timestamp updated_at
        varchar shard_key "Sharding key"
    }
    
    MESSAGE_READ_STATES {
        objectid _id PK "MongoDB ObjectId"
        uuid message_id FK "References messages.message_id"
        uuid user_id FK "User who read the message"
        uuid channel_id "Channel ID (null for DMs)"
        uuid conversation_id "Conversation ID for DMs"
        timestamp read_at "When message was read"
        boolean is_mentioned "User was mentioned in message"
    }
    
    MESSAGE_THREADS {
        objectid _id PK
        uuid thread_id UK "Thread root message ID"
        uuid channel_id FK "Parent channel"
        uuid server_id "Parent server"
        uuid starter_id FK "Thread starter user ID"
        varchar title "Thread title"
        integer message_count "Count of messages in thread"
        integer member_count "Users who participated"
        timestamp last_message_at
        boolean is_archived
        boolean is_locked "Locked by moderator"
        json tags "Thread tags/labels"
        timestamp created_at
        timestamp updated_at
    }
    
    TYPING_INDICATORS {
        objectid _id PK
        uuid channel_id FK "Channel where typing"
        uuid conversation_id "DM conversation ID"
        uuid user_id FK "User who is typing"
        varchar username "Denormalized username"
        timestamp started_at "When typing started"
        timestamp expires_at "When to stop showing"
    }
    
    %% Read Models (Elasticsearch)
    MESSAGE_SEARCH_INDEX {
        uuid message_id PK
        uuid channel_id
        uuid server_id
        uuid author_id
        varchar author_username
        text content "Full-text searchable"
        json attachments "Nested objects"
        json mentions "Nested objects"
        timestamp created_at
        boolean is_deleted
    }
    
    %% Analytics (ClickHouse)
    MESSAGE_ANALYTICS {
        uuid message_id
        uuid channel_id
        uuid server_id
        uuid author_id
        enum message_type "text|media|embed|system"
        integer content_length
        integer attachment_count
        integer mention_count
        integer reaction_count
        timestamp created_at
        varchar hour_bucket "YYYY-MM-DD HH for aggregation"
    }
    
    %% Relationships (Conceptual in MongoDB)
    MESSAGES ||--o{ MESSAGE_READ_STATES : "read_by"
    MESSAGES ||--o{ MESSAGE_THREADS : "can_start"
    MESSAGES ||--|| MESSAGE_SEARCH_INDEX : "indexed_in"
    MESSAGES ||--|| MESSAGE_ANALYTICS : "analyzed_in"
    MESSAGE_THREADS ||--o{ TYPING_INDICATORS : "typing_in"
    
    %% MongoDB Indexes
    MESSAGES {
        index type_channel_created "message_type, channel_id, created_at desc"
        index type_conversation_created "message_type, conversation_id, created_at desc"
        index author_created "author_id, created_at desc"
        index server_created "server_id, created_at desc"
        index thread_messages "thread_id, created_at asc"
        index mentions_multikey "mentions (multikey)"
        index content_search "content (text)"
        index pinned_channel "is_pinned, channel_id, created_at desc"
        shard_key channel_conversation "coalesce(channel_id, conversation_id)"
    }
    
    MESSAGE_READ_STATES {
        index user_channel_read "user_id, channel_id, read_at desc"
        index user_conversation_read "user_id, conversation_id, read_at desc"
        index message_readers "message_id, user_id"
    }
    
    MESSAGE_THREADS {
        index channel_last_message "channel_id, last_message_at desc"
        index starter_threads "starter_id, created_at desc"
    } 