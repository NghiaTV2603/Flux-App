erDiagram
    %% USER & SOCIAL SERVICE (merged User + Friend services)
    USER_PROFILES {
        uuid user_id PK "Same as auth service user ID"
        varchar username UK "Synced from auth service"
        varchar email "Synced from auth service"
        varchar display_name "User's display name"
        text avatar_url "Avatar image URL"
        text banner_url "Profile banner URL"
        text bio "User biography"
        enum status "online|offline|busy|away|invisible"
        varchar custom_status "Custom status message"
        json activity "Current activity (playing, listening, etc)"
        varchar timezone "User timezone"
        varchar language "Preferred language"
        boolean show_activity "Show current activity to others"
        timestamp created_at
        timestamp updated_at
        timestamp last_seen_at "Last activity timestamp"
        integer version "Optimistic locking"
        tsvector search_vector "Full-text search vector"
    }
    
    USER_SETTINGS {
        uuid user_id PK
        varchar theme "dark|light|auto"
        boolean notifications_enabled
        boolean sound_enabled
        boolean show_online_status
        boolean allow_direct_messages
        boolean allow_friend_requests
        jsonb privacy_settings "Additional privacy settings"
        timestamp updated_at
    }
    
    %% SOCIAL FEATURES (merged from Friend Service)
    FRIENDSHIPS {
        uuid id PK
        uuid requester_id FK "User who sent friend request"
        uuid addressee_id FK "User who received request"
        enum status "pending|accepted|declined|blocked"
        text message "Optional friend request message"
        timestamp created_at
        timestamp updated_at
        timestamp responded_at "When request was accepted/declined"
    }
    
    BLOCKS {
        uuid id PK
        uuid blocker_id FK "User who blocked"
        uuid blocked_id FK "User who was blocked"
        text reason "Optional block reason"
        timestamp created_at
    }
    
    USER_ACTIVITIES {
        uuid id PK
        uuid user_id FK
        varchar activity_type "playing|listening|watching|streaming|custom"
        varchar name "Activity name"
        text details "Activity details"
        varchar state "Current state"
        json timestamps "start, end times"
        json metadata "Additional activity data"
        timestamp created_at
        timestamp expires_at "Activity expiration"
    }
    
    %% Read Models (Materialized Views)
    USER_DIRECTORY {
        uuid user_id PK
        varchar username
        varchar display_name
        text avatar_url
        enum status
        varchar custom_status
        boolean show_online_status
        boolean allow_friend_requests
        integer friend_count "Computed from friendships"
        tsvector search_vector
        timestamp updated_at
    }
    
    %% FRIEND CACHE (for performance)
    FRIEND_LISTS_CACHE {
        uuid user_id PK
        uuid friend_id FK
        varchar friend_username "Denormalized"
        varchar friend_display_name "Denormalized"
        text friend_avatar_url "Denormalized"
        enum friend_status "online|offline|busy|away|invisible"
        enum friendship_status "accepted|pending|blocked"
        timestamp friendship_created_at
        timestamp last_updated
    }
    
    %% Relationships
    USER_PROFILES ||--|| USER_SETTINGS : "has"
    USER_PROFILES ||--o{ USER_ACTIVITIES : "has"
    USER_PROFILES ||--o{ FRIENDSHIPS : "requests/receives"
    USER_PROFILES ||--o{ BLOCKS : "blocks/blocked_by"
    USER_PROFILES ||--|| USER_DIRECTORY : "projected_to"
    FRIENDSHIPS ||--|| FRIEND_LISTS_CACHE : "cached_as"
    
    %% Indexes
    USER_PROFILES {
        index idx_profiles_username "username"
        index idx_profiles_display_name "display_name"
        index idx_profiles_status "status, updated_at"
        index idx_profiles_search "search_vector (GIN)"
    }
    
    USER_ACTIVITIES {
        index idx_activities_user_time "user_id, created_at"
        index idx_activities_type "activity_type, created_at"
    }
    
    FRIENDSHIPS {
        unique_constraint requester_addressee "requester_id, addressee_id"
        index idx_friendships_requester "requester_id, status"
        index idx_friendships_addressee "addressee_id, status"
        index idx_friendships_status "status, created_at"
    }
    
    BLOCKS {
        unique_constraint blocker_blocked "blocker_id, blocked_id"
        index idx_blocks_blocker "blocker_id, created_at"
        index idx_blocks_blocked "blocked_id, created_at"
    }
    
    FRIEND_LISTS_CACHE {
        index idx_friend_cache_user "user_id, friendship_status"
        index idx_friend_cache_status "friend_status, last_updated"
    } 